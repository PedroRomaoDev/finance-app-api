name: Deploy

on:
    push:
        branches:
            - master

jobs:
    check:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Use Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '20'

            - name: Create .env.test file
              run: echo "DATABASE_URL=postgresql://root:pedro2012@localhost:5433/finance-app" >> .env.test

            - name: Install dependencies
              run: npm ci --include=dev

            - name: Install Docker Compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose
                  docker-compose --version

            - name: ESlint
              run: npm run eslint:check

            - name: Prettier
              run: npm run prettier:check

            - name: Test
              run: npm run test

    migrate:
      runs-on: ubuntu-latest
      needs: check
      environment: production
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Use Node.js
          uses: actions/setup-node@v2
          with:
            node-version: '20'

        - name: Install Dependencies
          run: npm ci --include=dev
        
        - name: Create .env file from secret
          run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env

        - name: Run Migrations
          run: npx prisma migrate deploy

    deploy:
      runs-on: ubuntu-latest
      needs: migrate
      environment: production
      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to production
        run: |
          curl "${{ secrets.RENDER_DEPLOY_HOOK_URL }}" 
        
