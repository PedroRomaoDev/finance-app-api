{
	"info": {
		"_postman_id": "e957dbf9-ea30-4adf-95b1-2c8bac4cb378",
		"name": "Finance-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39728158",
		"_collection_link": "https://fintrack-7184.postman.co/workspace/Fintrack-Workspace~7765a370-50d9-45bc-a807-f8e55fb2ca56/collection/39728158-e957dbf9-ea30-4adf-95b1-2c8bac4cb378?action=share&source=collection_link&creator=39728158"
	},
	"item": [
		{
			"name": "Transaction",
			"item": [
				{
					"name": "Create Transaction",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"PICAAAAA\",\r\n    \"user_id\": \"04899dde-9e3c-47cb-9a9c-930e1442f461\",\r\n    \"date\": \"2020-01-01T00:00:00Z\",\r\n    \"amount\": 3213.91,\r\n    \"type\": \"EARNING\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/transactions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transaction By User Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/transactions?userId=04899dde-9e3c-47cb-9a9c-930e1442f461",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"transactions"
							],
							"query": [
								{
									"key": "userId",
									"value": "04899dde-9e3c-47cb-9a9c-930e1442f461"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Transaction",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"novo nome\"\r\n\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/transactions/86e755ec-780a-4a36-8175-3721c221fb8f",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"transactions",
								"86e755ec-780a-4a36-8175-3721c221fb8f"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Transaction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/transactions/86e755ec-780a-4a36-8175-3721c221fb8f",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"transactions",
								"86e755ec-780a-4a36-8175-3721c221fb8f"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"picaaaaaaaa\",\r\n    \"last_name\": \"pedrooooooo\",\r\n    \"email\": \"pe3333ca@gmail.com\",\r\n    \"password\": \"1333333\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users"
							]
						},
						"description": "Este endpoint permite a cria√ß√£o de um novo usu√°rio no sistema. O usu√°rio precisa fornecer um e-mail v√°lido, uma senha e seu primeiro e √∫ltimo nome.\n\n### **Notas**\n\n- O campo `email` deve ser √∫nico no sistema.\n    \n- A senha deve ter no m√≠nimo **6 caracteres**.\n    \n- Caso algum campo obrigat√≥rio n√£o seja enviado ou tenha formato inv√°lido, o sistema retornar√° um erro `400`.\n    \n- Se o e-mail j√° estiver cadastrado, a resposta ser√° um erro `409`.\n    \n\n### **M√©todo:** `POST`\n\n### **URL:** `/api/users`\n\n### **Corpo da Requisi√ß√£o (****`JSON`****)**\n\n### **Par√¢metros do Corpo:**\n\n| Campo | Tipo | Obrigat√≥rio | Descri√ß√£o |\n| --- | --- | --- | --- |\n| `first_name` | `string` | N√£o | Primeiro nome do usu√°rio |\n| `last_name` | `string` | N√£o | Sobrenome do usu√°rio |\n| `email` | `string` | ‚úÖ Sim | E-mail √∫nico e v√°lido do usu√°rio |\n| `password` | `string` | ‚úÖ Sim | Senha com pelo menos 6 caracteres |"
					},
					"response": []
				},
				{
					"name": "Get User By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/users/951662f5-ae31-4e6a-abea-7c1497a32715",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"951662f5-ae31-4e6a-abea-7c1497a32715"
							]
						},
						"description": "Este endpoint permite recuperar as informa√ß√µes de um usu√°rio espec√≠fico com base no seu ID.\n\n### **M√©todo:** `GET`\n\n### **URL:** `/api/users/{userId}`\n\n### **Par√¢metros da URL:**\n\n| Par√¢metro | Tipo | Obrigat√≥rio | Descri√ß√£o |\n| --- | --- | --- | --- |\n| `userId` | `string (UUID)` | ‚úÖ Sim | ID √∫nico do usu√°rio a ser consultado |\n\n### **Respostas**\n\n#### ‚úÖ **200 OK** ‚Äì Usu√°rio encontrado\n\nüö´ **404 Not Found** ‚Äì Usu√°rio n√£o encontrado  \nüö´ **500 Internal Server Error** ‚Äì Erro inesperado\n\nüö´ **400 Bad Request** ‚Äì ID inv√°lido\n\n### **Notas**\n\n- O `userId` deve ser um UUID v√°lido.\n    \n- Se o usu√°rio n√£o existir no banco de dados, o sistema retornar√° um erro `404`.\n    \n- Caso o ID seja inv√°lido (n√£o seja um UUID), a resposta ser√° um erro `400`."
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"papitoo\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/users/951662f5-ae31-4e6a-abea-7c1497a32715",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"951662f5-ae31-4e6a-abea-7c1497a32715"
							]
						},
						"description": "Este endpoint permite atualizar as informa√ß√µes de um usu√°rio existente com base no seu ID. Apenas campos permitidos podem ser modificados.\n\n### **M√©todo:** `PATCH`\n\n### **URL:** `/api/users/{userId}`\n\n### **Par√¢metros da URL:**\n\n| Par√¢metro | Tipo | Obrigat√≥rio | Descri√ß√£o |\n| --- | --- | --- | --- |\n| `userId` | `string (UUID)` | ‚úÖ Sim | ID √∫nico do usu√°rio a ser atualizado |\n\n### **Corpo da Requisi√ß√£o (JSON):**\n\nO corpo da requisi√ß√£o deve conter os campos a serem atualizados.\n\n| Campo | Tipo | Obrigat√≥rio | Descri√ß√£o |\n| --- | --- | --- | --- |\n| `first_name` | `string` | ‚ùå N√£o | Primeiro nome do usu√°rio |\n| `last_name` | `string` | ‚ùå N√£o | Sobrenome do usu√°rio |\n| `email` | `string` | ‚ùå N√£o | Novo e-mail do usu√°rio (deve ser v√°lido e n√£o estar em uso) |\n| `password` | `string` | ‚ùå N√£o | Nova senha do usu√°rio (m√≠nimo 6 caracteres) |\n\n### **Exemplo de Requisi√ß√£o:**\n\n``` bash\nPATCH /api/users/123e4567-e89b-12d3-a456-426614174000\n\n ```\n\n### **Respostas**\n\n#### **‚úÖ 200 OK ‚Äì Usu√°rio atualizado com sucesso**\n\n**üö´ 500 Internal Server Error ‚Äì Erro inesperado**\n\n#### **üö´ 400 Bad Request ‚Äì Erro de valida√ß√£o**\n\n- **Campos inv√°lidos ou n√£o permitidos**\n    \n- **E-mail inv√°lido**\n    \n- **E-mail j√° em uso**\n    \n- **Senha curta**\n    \n- **ID inv√°lido**\n    \n\n**üö´ 404 Not Found ‚Äì Usu√°rio n√£o encontrado**\n\n**üö´ 500 Internal Server Error ‚Äì Erro inesperado**\n\n### **Notas**\n\n- O `userId` deve ser um UUID v√°lido.\n    \n- Se o usu√°rio n√£o existir no banco de dados, o sistema retornar√° um erro `404`.\n    \n- Apenas os campos `first_name`, `last_name`, `email` e `password` podem ser atualizados.\n    \n- O e-mail deve ser √∫nico e v√°lido. Caso o novo e-mail j√° esteja em uso, a atualiza√ß√£o ser√° rejeitada.\n    \n- Senhas devem ter no m√≠nimo 6 caracteres e ser√£o armazenadas de forma criptografada."
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/users/596109ac-a99d-4f36-b1ac-ec61fe7a012b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"596109ac-a99d-4f36-b1ac-ec61fe7a012b"
							]
						},
						"description": "Este endpoint permite atualizar as informa√ß√µes de um usu√°rio existente com base no seu ID. Apenas campos permitidos podem ser modificados.\n\n### **M√©todo:** `PATCH`\n\n### **URL:** `/api/users/{userId}`\n\n### **Par√¢metros da URL:**\n\n| Par√¢metro | Tipo | Obrigat√≥rio | Descri√ß√£o |\n| --- | --- | --- | --- |\n| `userId` | `string (UUID)` | ‚úÖ Sim | ID √∫nico do usu√°rio a ser atualizado |\n\n### **Corpo da Requisi√ß√£o (JSON):**\n\nO corpo da requisi√ß√£o deve conter os campos a serem atualizados.\n\n| Campo | Tipo | Obrigat√≥rio | Descri√ß√£o |\n| --- | --- | --- | --- |\n| `first_name` | `string` | ‚ùå N√£o | Primeiro nome do usu√°rio |\n| `last_name` | `string` | ‚ùå N√£o | Sobrenome do usu√°rio |\n| `email` | `string` | ‚ùå N√£o | Novo e-mail do usu√°rio (deve ser v√°lido e n√£o estar em uso) |\n| `password` | `string` | ‚ùå N√£o | Nova senha do usu√°rio (m√≠nimo 6 caracteres) |\n\n### **Exemplo de Requisi√ß√£o:**\n\n``` bash\nPATCH /api/users/123e4567-e89b-12d3-a456-426614174000\n\n ```\n\n### **Respostas**\n\n#### **‚úÖ 200 OK ‚Äì Usu√°rio atualizado com sucesso**\n\n**üö´ 500 Internal Server Error ‚Äì Erro inesperado**\n\n#### **üö´ 400 Bad Request ‚Äì Erro de valida√ß√£o**\n\n- **Campos inv√°lidos ou n√£o permitidos**\n    \n- **E-mail inv√°lido**\n    \n- **E-mail j√° em uso**\n    \n- **Senha curta**\n    \n- **ID inv√°lido**\n    \n\n**üö´ 404 Not Found ‚Äì Usu√°rio n√£o encontrado**\n\n**üö´ 500 Internal Server Error ‚Äì Erro inesperado**\n\n### **Notas**\n\n- O `userId` deve ser um UUID v√°lido.\n    \n- Se o usu√°rio n√£o existir no banco de dados, o sistema retornar√° um erro `404`.\n    \n- Apenas os campos `first_name`, `last_name`, `email` e `password` podem ser atualizados.\n    \n- O e-mail deve ser √∫nico e v√°lido. Caso o novo e-mail j√° esteja em uso, a atualiza√ß√£o ser√° rejeitada.\n    \n- Senhas devem ter no m√≠nimo 6 caracteres e ser√£o armazenadas de forma criptografada."
					},
					"response": []
				},
				{
					"name": "Get User Balance",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/users/951662f5-ae31-4e6a-abea-7c1497a32715/balance",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"951662f5-ae31-4e6a-abea-7c1497a32715",
								"balance"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}